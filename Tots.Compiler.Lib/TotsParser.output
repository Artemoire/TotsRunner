Terminals unused in grammar

   _DOT


Grammar

    0 $accept: root $end

    1 root: function_decl_list

    2 function_decl_list: function_decl
    3                   | function_decl_list function_decl

    4 function_decl: type _ID _LPAREN argument_list _RPAREN _LCURLY statement_list _RCURLY

    5 argument_list: %empty
    6              | argument
    7              | argument_list _COMMA argument

    8 argument: type var_declr

    9 statement_list: %empty
   10               | statement_list statement

   11 statement: statement_block
   12          | local_decl_stmt
   13          | expr_stmt

   14 statement_block: _LCURLY statement_list _RCURLY

   15 local_decl_stmt: type var_declr _SEMICOLON

   16 expr_stmt: expr _SEMICOLON

   17 expr: id_expr
   18     | num_lit_expr
   19     | assign_expr
   20     | bin_expr

   21 id_expr: _ID

   22 num_lit_expr: _INT_LITERAL

   23 assign_expr: expr _EQ expr
   24            | expr _ADD_EQ expr
   25            | expr _SUB_EQ expr
   26            | expr _MUL_EQ expr
   27            | expr _DIV_EQ expr

   28 bin_expr: expr _ADD expr
   29         | expr _SUB expr
   30         | expr _MUL expr
   31         | expr _DIV expr

   32 var_declr: _ID
   33          | _ID _EQ expr

   34 type: _VAR
   35     | _VOID
   36     | _INT
   37     | _FLOAT
   38     | _BOOL
   39     | _CHAR
   40     | _ID


Terminals, with rules where they appear

$end (0) 0
error (256)
_VAR (258) 34
_VOID (259) 35
_INT (260) 36
_FLOAT (261) 37
_BOOL (262) 38
_CHAR (263) 39
_LPAREN (264) 4
_RPAREN (265) 4
_LCURLY (266) 4 14
_RCURLY (267) 4 14
_COMMA (268) 7
_DOT (269)
_SEMICOLON (270) 15 16
_EQ (271) 23 33
_ADD_EQ (272) 24
_SUB_EQ (273) 25
_MUL_EQ (274) 26
_DIV_EQ (275) 27
_ADD (276) 28
_SUB (277) 29
_MUL (278) 30
_DIV (279) 31
_ID (280) 4 21 32 33 40
_INT_LITERAL (281) 22


Nonterminals, with rules where they appear

$accept (27)
    on left: 0
root (28)
    on left: 1, on right: 0
function_decl_list (29)
    on left: 2 3, on right: 1 3
function_decl (30)
    on left: 4, on right: 2 3
argument_list (31)
    on left: 5 6 7, on right: 4 7
argument (32)
    on left: 8, on right: 6 7
statement_list (33)
    on left: 9 10, on right: 4 10 14
statement (34)
    on left: 11 12 13, on right: 10
statement_block (35)
    on left: 14, on right: 11
local_decl_stmt (36)
    on left: 15, on right: 12
expr_stmt (37)
    on left: 16, on right: 13
expr (38)
    on left: 17 18 19 20, on right: 16 23 24 25 26 27 28 29 30 31 33
id_expr (39)
    on left: 21, on right: 17
num_lit_expr (40)
    on left: 22, on right: 18
assign_expr (41)
    on left: 23 24 25 26 27, on right: 19
bin_expr (42)
    on left: 28 29 30 31, on right: 20
var_declr (43)
    on left: 32 33, on right: 8 15
type (44)
    on left: 34 35 36 37 38 39 40, on right: 4 8 15


State 0

    0 $accept: . root $end

    _VAR    shift, and go to state 1
    _VOID   shift, and go to state 2
    _INT    shift, and go to state 3
    _FLOAT  shift, and go to state 4
    _BOOL   shift, and go to state 5
    _CHAR   shift, and go to state 6
    _ID     shift, and go to state 7

    root                go to state 8
    function_decl_list  go to state 9
    function_decl       go to state 10
    type                go to state 11


State 1

   34 type: _VAR .

    $default  reduce using rule 34 (type)


State 2

   35 type: _VOID .

    $default  reduce using rule 35 (type)


State 3

   36 type: _INT .

    $default  reduce using rule 36 (type)


State 4

   37 type: _FLOAT .

    $default  reduce using rule 37 (type)


State 5

   38 type: _BOOL .

    $default  reduce using rule 38 (type)


State 6

   39 type: _CHAR .

    $default  reduce using rule 39 (type)


State 7

   40 type: _ID .

    $default  reduce using rule 40 (type)


State 8

    0 $accept: root . $end

    $end  shift, and go to state 12


State 9

    1 root: function_decl_list .
    3 function_decl_list: function_decl_list . function_decl

    _VAR    shift, and go to state 1
    _VOID   shift, and go to state 2
    _INT    shift, and go to state 3
    _FLOAT  shift, and go to state 4
    _BOOL   shift, and go to state 5
    _CHAR   shift, and go to state 6
    _ID     shift, and go to state 7

    $default  reduce using rule 1 (root)

    function_decl  go to state 13
    type           go to state 11


State 10

    2 function_decl_list: function_decl .

    $default  reduce using rule 2 (function_decl_list)


State 11

    4 function_decl: type . _ID _LPAREN argument_list _RPAREN _LCURLY statement_list _RCURLY

    _ID  shift, and go to state 14


State 12

    0 $accept: root $end .

    $default  accept


State 13

    3 function_decl_list: function_decl_list function_decl .

    $default  reduce using rule 3 (function_decl_list)


State 14

    4 function_decl: type _ID . _LPAREN argument_list _RPAREN _LCURLY statement_list _RCURLY

    _LPAREN  shift, and go to state 15


State 15

    4 function_decl: type _ID _LPAREN . argument_list _RPAREN _LCURLY statement_list _RCURLY

    _VAR    shift, and go to state 1
    _VOID   shift, and go to state 2
    _INT    shift, and go to state 3
    _FLOAT  shift, and go to state 4
    _BOOL   shift, and go to state 5
    _CHAR   shift, and go to state 6
    _ID     shift, and go to state 7

    $default  reduce using rule 5 (argument_list)

    argument_list  go to state 16
    argument       go to state 17
    type           go to state 18


State 16

    4 function_decl: type _ID _LPAREN argument_list . _RPAREN _LCURLY statement_list _RCURLY
    7 argument_list: argument_list . _COMMA argument

    _RPAREN  shift, and go to state 19
    _COMMA   shift, and go to state 20


State 17

    6 argument_list: argument .

    $default  reduce using rule 6 (argument_list)


State 18

    8 argument: type . var_declr

    _ID  shift, and go to state 21

    var_declr  go to state 22


State 19

    4 function_decl: type _ID _LPAREN argument_list _RPAREN . _LCURLY statement_list _RCURLY

    _LCURLY  shift, and go to state 23


State 20

    7 argument_list: argument_list _COMMA . argument

    _VAR    shift, and go to state 1
    _VOID   shift, and go to state 2
    _INT    shift, and go to state 3
    _FLOAT  shift, and go to state 4
    _BOOL   shift, and go to state 5
    _CHAR   shift, and go to state 6
    _ID     shift, and go to state 7

    argument  go to state 24
    type      go to state 18


State 21

   32 var_declr: _ID .
   33          | _ID . _EQ expr

    _EQ  shift, and go to state 25

    $default  reduce using rule 32 (var_declr)


State 22

    8 argument: type var_declr .

    $default  reduce using rule 8 (argument)


State 23

    4 function_decl: type _ID _LPAREN argument_list _RPAREN _LCURLY . statement_list _RCURLY

    $default  reduce using rule 9 (statement_list)

    statement_list  go to state 26


State 24

    7 argument_list: argument_list _COMMA argument .

    $default  reduce using rule 7 (argument_list)


State 25

   33 var_declr: _ID _EQ . expr

    _ID           shift, and go to state 27
    _INT_LITERAL  shift, and go to state 28

    expr          go to state 29
    id_expr       go to state 30
    num_lit_expr  go to state 31
    assign_expr   go to state 32
    bin_expr      go to state 33


State 26

    4 function_decl: type _ID _LPAREN argument_list _RPAREN _LCURLY statement_list . _RCURLY
   10 statement_list: statement_list . statement

    _VAR          shift, and go to state 1
    _VOID         shift, and go to state 2
    _INT          shift, and go to state 3
    _FLOAT        shift, and go to state 4
    _BOOL         shift, and go to state 5
    _CHAR         shift, and go to state 6
    _LCURLY       shift, and go to state 34
    _RCURLY       shift, and go to state 35
    _ID           shift, and go to state 36
    _INT_LITERAL  shift, and go to state 28

    statement        go to state 37
    statement_block  go to state 38
    local_decl_stmt  go to state 39
    expr_stmt        go to state 40
    expr             go to state 41
    id_expr          go to state 30
    num_lit_expr     go to state 31
    assign_expr      go to state 32
    bin_expr         go to state 33
    type             go to state 42


State 27

   21 id_expr: _ID .

    $default  reduce using rule 21 (id_expr)


State 28

   22 num_lit_expr: _INT_LITERAL .

    $default  reduce using rule 22 (num_lit_expr)


State 29

   23 assign_expr: expr . _EQ expr
   24            | expr . _ADD_EQ expr
   25            | expr . _SUB_EQ expr
   26            | expr . _MUL_EQ expr
   27            | expr . _DIV_EQ expr
   28 bin_expr: expr . _ADD expr
   29         | expr . _SUB expr
   30         | expr . _MUL expr
   31         | expr . _DIV expr
   33 var_declr: _ID _EQ expr .

    _EQ      shift, and go to state 43
    _ADD_EQ  shift, and go to state 44
    _SUB_EQ  shift, and go to state 45
    _MUL_EQ  shift, and go to state 46
    _DIV_EQ  shift, and go to state 47
    _ADD     shift, and go to state 48
    _SUB     shift, and go to state 49
    _MUL     shift, and go to state 50
    _DIV     shift, and go to state 51

    $default  reduce using rule 33 (var_declr)


State 30

   17 expr: id_expr .

    $default  reduce using rule 17 (expr)


State 31

   18 expr: num_lit_expr .

    $default  reduce using rule 18 (expr)


State 32

   19 expr: assign_expr .

    $default  reduce using rule 19 (expr)


State 33

   20 expr: bin_expr .

    $default  reduce using rule 20 (expr)


State 34

   14 statement_block: _LCURLY . statement_list _RCURLY

    $default  reduce using rule 9 (statement_list)

    statement_list  go to state 52


State 35

    4 function_decl: type _ID _LPAREN argument_list _RPAREN _LCURLY statement_list _RCURLY .

    $default  reduce using rule 4 (function_decl)


State 36

   21 id_expr: _ID .
   40 type: _ID .

    _ID       reduce using rule 40 (type)
    $default  reduce using rule 21 (id_expr)


State 37

   10 statement_list: statement_list statement .

    $default  reduce using rule 10 (statement_list)


State 38

   11 statement: statement_block .

    $default  reduce using rule 11 (statement)


State 39

   12 statement: local_decl_stmt .

    $default  reduce using rule 12 (statement)


State 40

   13 statement: expr_stmt .

    $default  reduce using rule 13 (statement)


State 41

   16 expr_stmt: expr . _SEMICOLON
   23 assign_expr: expr . _EQ expr
   24            | expr . _ADD_EQ expr
   25            | expr . _SUB_EQ expr
   26            | expr . _MUL_EQ expr
   27            | expr . _DIV_EQ expr
   28 bin_expr: expr . _ADD expr
   29         | expr . _SUB expr
   30         | expr . _MUL expr
   31         | expr . _DIV expr

    _SEMICOLON  shift, and go to state 53
    _EQ         shift, and go to state 43
    _ADD_EQ     shift, and go to state 44
    _SUB_EQ     shift, and go to state 45
    _MUL_EQ     shift, and go to state 46
    _DIV_EQ     shift, and go to state 47
    _ADD        shift, and go to state 48
    _SUB        shift, and go to state 49
    _MUL        shift, and go to state 50
    _DIV        shift, and go to state 51


State 42

   15 local_decl_stmt: type . var_declr _SEMICOLON

    _ID  shift, and go to state 21

    var_declr  go to state 54


State 43

   23 assign_expr: expr _EQ . expr

    _ID           shift, and go to state 27
    _INT_LITERAL  shift, and go to state 28

    expr          go to state 55
    id_expr       go to state 30
    num_lit_expr  go to state 31
    assign_expr   go to state 32
    bin_expr      go to state 33


State 44

   24 assign_expr: expr _ADD_EQ . expr

    _ID           shift, and go to state 27
    _INT_LITERAL  shift, and go to state 28

    expr          go to state 56
    id_expr       go to state 30
    num_lit_expr  go to state 31
    assign_expr   go to state 32
    bin_expr      go to state 33


State 45

   25 assign_expr: expr _SUB_EQ . expr

    _ID           shift, and go to state 27
    _INT_LITERAL  shift, and go to state 28

    expr          go to state 57
    id_expr       go to state 30
    num_lit_expr  go to state 31
    assign_expr   go to state 32
    bin_expr      go to state 33


State 46

   26 assign_expr: expr _MUL_EQ . expr

    _ID           shift, and go to state 27
    _INT_LITERAL  shift, and go to state 28

    expr          go to state 58
    id_expr       go to state 30
    num_lit_expr  go to state 31
    assign_expr   go to state 32
    bin_expr      go to state 33


State 47

   27 assign_expr: expr _DIV_EQ . expr

    _ID           shift, and go to state 27
    _INT_LITERAL  shift, and go to state 28

    expr          go to state 59
    id_expr       go to state 30
    num_lit_expr  go to state 31
    assign_expr   go to state 32
    bin_expr      go to state 33


State 48

   28 bin_expr: expr _ADD . expr

    _ID           shift, and go to state 27
    _INT_LITERAL  shift, and go to state 28

    expr          go to state 60
    id_expr       go to state 30
    num_lit_expr  go to state 31
    assign_expr   go to state 32
    bin_expr      go to state 33


State 49

   29 bin_expr: expr _SUB . expr

    _ID           shift, and go to state 27
    _INT_LITERAL  shift, and go to state 28

    expr          go to state 61
    id_expr       go to state 30
    num_lit_expr  go to state 31
    assign_expr   go to state 32
    bin_expr      go to state 33


State 50

   30 bin_expr: expr _MUL . expr

    _ID           shift, and go to state 27
    _INT_LITERAL  shift, and go to state 28

    expr          go to state 62
    id_expr       go to state 30
    num_lit_expr  go to state 31
    assign_expr   go to state 32
    bin_expr      go to state 33


State 51

   31 bin_expr: expr _DIV . expr

    _ID           shift, and go to state 27
    _INT_LITERAL  shift, and go to state 28

    expr          go to state 63
    id_expr       go to state 30
    num_lit_expr  go to state 31
    assign_expr   go to state 32
    bin_expr      go to state 33


State 52

   10 statement_list: statement_list . statement
   14 statement_block: _LCURLY statement_list . _RCURLY

    _VAR          shift, and go to state 1
    _VOID         shift, and go to state 2
    _INT          shift, and go to state 3
    _FLOAT        shift, and go to state 4
    _BOOL         shift, and go to state 5
    _CHAR         shift, and go to state 6
    _LCURLY       shift, and go to state 34
    _RCURLY       shift, and go to state 64
    _ID           shift, and go to state 36
    _INT_LITERAL  shift, and go to state 28

    statement        go to state 37
    statement_block  go to state 38
    local_decl_stmt  go to state 39
    expr_stmt        go to state 40
    expr             go to state 41
    id_expr          go to state 30
    num_lit_expr     go to state 31
    assign_expr      go to state 32
    bin_expr         go to state 33
    type             go to state 42


State 53

   16 expr_stmt: expr _SEMICOLON .

    $default  reduce using rule 16 (expr_stmt)


State 54

   15 local_decl_stmt: type var_declr . _SEMICOLON

    _SEMICOLON  shift, and go to state 65


State 55

   23 assign_expr: expr . _EQ expr
   23            | expr _EQ expr .
   24            | expr . _ADD_EQ expr
   25            | expr . _SUB_EQ expr
   26            | expr . _MUL_EQ expr
   27            | expr . _DIV_EQ expr
   28 bin_expr: expr . _ADD expr
   29         | expr . _SUB expr
   30         | expr . _MUL expr
   31         | expr . _DIV expr

    _EQ      shift, and go to state 43
    _ADD_EQ  shift, and go to state 44
    _SUB_EQ  shift, and go to state 45
    _MUL_EQ  shift, and go to state 46
    _DIV_EQ  shift, and go to state 47
    _ADD     shift, and go to state 48
    _SUB     shift, and go to state 49
    _MUL     shift, and go to state 50
    _DIV     shift, and go to state 51

    $default  reduce using rule 23 (assign_expr)


State 56

   23 assign_expr: expr . _EQ expr
   24            | expr . _ADD_EQ expr
   24            | expr _ADD_EQ expr .
   25            | expr . _SUB_EQ expr
   26            | expr . _MUL_EQ expr
   27            | expr . _DIV_EQ expr
   28 bin_expr: expr . _ADD expr
   29         | expr . _SUB expr
   30         | expr . _MUL expr
   31         | expr . _DIV expr

    _EQ      shift, and go to state 43
    _ADD_EQ  shift, and go to state 44
    _SUB_EQ  shift, and go to state 45
    _MUL_EQ  shift, and go to state 46
    _DIV_EQ  shift, and go to state 47
    _ADD     shift, and go to state 48
    _SUB     shift, and go to state 49
    _MUL     shift, and go to state 50
    _DIV     shift, and go to state 51

    $default  reduce using rule 24 (assign_expr)


State 57

   23 assign_expr: expr . _EQ expr
   24            | expr . _ADD_EQ expr
   25            | expr . _SUB_EQ expr
   25            | expr _SUB_EQ expr .
   26            | expr . _MUL_EQ expr
   27            | expr . _DIV_EQ expr
   28 bin_expr: expr . _ADD expr
   29         | expr . _SUB expr
   30         | expr . _MUL expr
   31         | expr . _DIV expr

    _EQ      shift, and go to state 43
    _ADD_EQ  shift, and go to state 44
    _SUB_EQ  shift, and go to state 45
    _MUL_EQ  shift, and go to state 46
    _DIV_EQ  shift, and go to state 47
    _ADD     shift, and go to state 48
    _SUB     shift, and go to state 49
    _MUL     shift, and go to state 50
    _DIV     shift, and go to state 51

    $default  reduce using rule 25 (assign_expr)


State 58

   23 assign_expr: expr . _EQ expr
   24            | expr . _ADD_EQ expr
   25            | expr . _SUB_EQ expr
   26            | expr . _MUL_EQ expr
   26            | expr _MUL_EQ expr .
   27            | expr . _DIV_EQ expr
   28 bin_expr: expr . _ADD expr
   29         | expr . _SUB expr
   30         | expr . _MUL expr
   31         | expr . _DIV expr

    _EQ      shift, and go to state 43
    _ADD_EQ  shift, and go to state 44
    _SUB_EQ  shift, and go to state 45
    _MUL_EQ  shift, and go to state 46
    _DIV_EQ  shift, and go to state 47
    _ADD     shift, and go to state 48
    _SUB     shift, and go to state 49
    _MUL     shift, and go to state 50
    _DIV     shift, and go to state 51

    $default  reduce using rule 26 (assign_expr)


State 59

   23 assign_expr: expr . _EQ expr
   24            | expr . _ADD_EQ expr
   25            | expr . _SUB_EQ expr
   26            | expr . _MUL_EQ expr
   27            | expr . _DIV_EQ expr
   27            | expr _DIV_EQ expr .
   28 bin_expr: expr . _ADD expr
   29         | expr . _SUB expr
   30         | expr . _MUL expr
   31         | expr . _DIV expr

    _EQ      shift, and go to state 43
    _ADD_EQ  shift, and go to state 44
    _SUB_EQ  shift, and go to state 45
    _MUL_EQ  shift, and go to state 46
    _DIV_EQ  shift, and go to state 47
    _ADD     shift, and go to state 48
    _SUB     shift, and go to state 49
    _MUL     shift, and go to state 50
    _DIV     shift, and go to state 51

    $default  reduce using rule 27 (assign_expr)


State 60

   23 assign_expr: expr . _EQ expr
   24            | expr . _ADD_EQ expr
   25            | expr . _SUB_EQ expr
   26            | expr . _MUL_EQ expr
   27            | expr . _DIV_EQ expr
   28 bin_expr: expr . _ADD expr
   28         | expr _ADD expr .
   29         | expr . _SUB expr
   30         | expr . _MUL expr
   31         | expr . _DIV expr

    _MUL  shift, and go to state 50
    _DIV  shift, and go to state 51

    $default  reduce using rule 28 (bin_expr)


State 61

   23 assign_expr: expr . _EQ expr
   24            | expr . _ADD_EQ expr
   25            | expr . _SUB_EQ expr
   26            | expr . _MUL_EQ expr
   27            | expr . _DIV_EQ expr
   28 bin_expr: expr . _ADD expr
   29         | expr . _SUB expr
   29         | expr _SUB expr .
   30         | expr . _MUL expr
   31         | expr . _DIV expr

    _MUL  shift, and go to state 50
    _DIV  shift, and go to state 51

    $default  reduce using rule 29 (bin_expr)


State 62

   23 assign_expr: expr . _EQ expr
   24            | expr . _ADD_EQ expr
   25            | expr . _SUB_EQ expr
   26            | expr . _MUL_EQ expr
   27            | expr . _DIV_EQ expr
   28 bin_expr: expr . _ADD expr
   29         | expr . _SUB expr
   30         | expr . _MUL expr
   30         | expr _MUL expr .
   31         | expr . _DIV expr

    $default  reduce using rule 30 (bin_expr)


State 63

   23 assign_expr: expr . _EQ expr
   24            | expr . _ADD_EQ expr
   25            | expr . _SUB_EQ expr
   26            | expr . _MUL_EQ expr
   27            | expr . _DIV_EQ expr
   28 bin_expr: expr . _ADD expr
   29         | expr . _SUB expr
   30         | expr . _MUL expr
   31         | expr . _DIV expr
   31         | expr _DIV expr .

    $default  reduce using rule 31 (bin_expr)


State 64

   14 statement_block: _LCURLY statement_list _RCURLY .

    $default  reduce using rule 14 (statement_block)


State 65

   15 local_decl_stmt: type var_declr _SEMICOLON .

    $default  reduce using rule 15 (local_decl_stmt)
